{
  "sksl": "// This SkSL shader is autogenerated by spirv-cross.\n\nfloat4 flutter_FragCoord;\n\nuniform vec2 uSize;\nuniform float zoom;\nuniform vec2 uPos;\nuniform vec4 objects1;\nuniform vec4 objects2;\nuniform vec4 objects3;\nuniform vec4 objects4;\n\nvec4 fragColor;\n\nvec2 iResolution;\nfloat iTime;\n\nvec2 FLT_flutter_local_FlutterFragCoord()\n{\n    return flutter_FragCoord.xy;\n}\n\nvec4 FLT_flutter_local_getObject(int i)\n{\n    int I = i;\n    switch (I)\n    {\n        case 0:\n        {\n            return objects1;\n        }\n        case 1:\n        {\n            return objects2;\n        }\n        case 2:\n        {\n            return objects3;\n        }\n    }\n    return objects4;\n}\n\nvec4 FLT_flutter_local_getColor(int i, int iter)\n{\n    if (iter == 0)\n    {\n        return vec4(50.0, 50.0, 50.0, 1.0);\n    }\n    switch (i)\n    {\n        case 0:\n        {\n            return vec4(128.0, 255.0, 0.0, 1.0);\n        }\n        case 1:\n        {\n            return vec4(0.0, 255.0, 255.0, 1.0);\n        }\n        case 2:\n        {\n            return vec4(128.0, 0.0, 255.0, 1.0);\n        }\n    }\n    return vec4(255.0, 0.0, 0.0, 1.0);\n}\n\nvec4 FLT_flutter_local_iterate(inout vec2 position)\n{\n    vec2 vel = vec2(0.0);\n    for (int i = 0; i < 100; i++)\n    {\n        for (int k = 0; k < 4; k++)\n        {\n            int param = k;\n            int param_1 = k;\n            if (length(FLT_flutter_local_getObject(param).yz - position) < FLT_flutter_local_getObject(param_1).w)\n            {\n                int param_2 = k;\n                int param_3 = i;\n                return FLT_flutter_local_getColor(param_2, param_3);\n            }\n        }\n        for (int j = 0; j < 4; j++)\n        {\n            int param_4 = j;\n            if (FLT_flutter_local_getObject(param_4).w == 0.0)\n            {\n                break;\n            }\n            int param_5 = j;\n            int param_6 = j;\n            int param_7 = j;\n            vel += (((FLT_flutter_local_getObject(param_5).yz - position) * 0.25) * (FLT_flutter_local_getObject(param_6).x / pow(length(FLT_flutter_local_getObject(param_7).yz - position), 2.0)));\n        }\n        position += vel;\n    }\n    return vec4(0.0, 0.0, 0.0, 1.0);\n}\n\nvoid FLT_main()\n{\n    vec2 iResolution_1 = uSize;\n    vec2 fragCoord = FLT_flutter_local_FlutterFragCoord();\n    float res = min(iResolution_1.x, iResolution_1.y);\n    vec2 pos = uPos + ((((fragCoord - (iResolution_1 / vec2(2.0))) / vec2(res)) * 2.0) / vec2(zoom));\n    vec2 param_8 = pos;\n    vec4 _219 = FLT_flutter_local_iterate(param_8);\n    fragColor = _219;\n}\n\nhalf4 main(float2 iFragCoord)\n{\n      flutter_FragCoord = float4(iFragCoord, 0, 0);\n      FLT_main();\n      return fragColor;\n}\n",
  "stage": 1,
  "target_platform": 2,
  "uniforms": [
    {
      "array_elements": 0,
      "bit_width": 32,
      "columns": 1,
      "location": 0,
      "name": "uSize",
      "rows": 2,
      "type": 10
    },
    {
      "array_elements": 0,
      "bit_width": 32,
      "columns": 1,
      "location": 1,
      "name": "zoom",
      "rows": 1,
      "type": 10
    },
    {
      "array_elements": 0,
      "bit_width": 32,
      "columns": 1,
      "location": 2,
      "name": "uPos",
      "rows": 2,
      "type": 10
    },
    {
      "array_elements": 0,
      "bit_width": 32,
      "columns": 1,
      "location": 3,
      "name": "objects1",
      "rows": 4,
      "type": 10
    },
    {
      "array_elements": 0,
      "bit_width": 32,
      "columns": 1,
      "location": 4,
      "name": "objects2",
      "rows": 4,
      "type": 10
    },
    {
      "array_elements": 0,
      "bit_width": 32,
      "columns": 1,
      "location": 5,
      "name": "objects3",
      "rows": 4,
      "type": 10
    },
    {
      "array_elements": 0,
      "bit_width": 32,
      "columns": 1,
      "location": 6,
      "name": "objects4",
      "rows": 4,
      "type": 10
    }
  ]
}